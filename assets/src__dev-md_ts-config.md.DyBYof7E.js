import{_ as i,c as t,o as a,ae as n}from"./chunks/framework.CSmNDPeZ.js";const c=JSON.parse('{"title":"@mt-kit/ts-config","description":"","frontmatter":{},"headers":[],"relativePath":"src/_dev-md/ts-config.md","filePath":"src/_dev-md/ts-config.md"}'),e={name:"src/_dev-md/ts-config.md"};function h(l,s,d,p,o,k){return a(),t("div",null,[...s[0]||(s[0]=[n(`<h1 id="mt-kit-ts-config" tabindex="-1">@mt-kit/ts-config <a class="header-anchor" href="#mt-kit-ts-config" aria-label="Permalink to &quot;@mt-kit/ts-config&quot;">​</a></h1><blockquote><p>基于 TypeScript 5.x 的现代化 TypeScript 配置，支持多种框架和运行环境</p></blockquote><p><a href="https://www.npmjs.com/package/@mt-kit/ts-config" target="_blank" rel="noreferrer"><img src="https://img.shields.io/npm/v/@mt-kit/ts-config.svg" alt="npm version"></a><a href="https://github.com/Not-have/micro-tools/blob/main/LICENSE" target="_blank" rel="noreferrer"><img src="https://img.shields.io/npm/l/@mt-kit/ts-config.svg" alt="License"></a></p><h2 id="📚-相关文档" tabindex="-1">📚 相关文档 <a class="header-anchor" href="#📚-相关文档" aria-label="Permalink to &quot;📚 相关文档&quot;">​</a></h2><ul><li><a href="https://www.typescriptlang.org/" target="_blank" rel="noreferrer">TypeScript 官方文档</a></li><li><a href="https://ts.nodejs.cn/" target="_blank" rel="noreferrer">TypeScript 中文文档</a></li><li><a href="https://www.typescriptlang.org/tsconfig" target="_blank" rel="noreferrer">TypeScript 配置参考</a></li></ul><h2 id="🚀-快速开始" tabindex="-1">🚀 快速开始 <a class="header-anchor" href="#🚀-快速开始" aria-label="Permalink to &quot;🚀 快速开始&quot;">​</a></h2><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用 npm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> typescript</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @types/node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @mt-kit/ts-config</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用 pnpm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> typescript</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @types/node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @mt-kit/ts-config</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用 yarn</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> typescript</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @types/node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @mt-kit/ts-config</span></span></code></pre></div><blockquote><p><strong>注意</strong>: <code>@types/node</code> 提供了 Node.js 的 TypeScript 类型定义</p></blockquote><h3 id="基础配置" tabindex="-1">基础配置 <a class="header-anchor" href="#基础配置" aria-label="Permalink to &quot;基础配置&quot;">​</a></h3><p>创建 <code>tsconfig.json</code> 文件：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;$schema&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://json.schemastore.org/tsconfig&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;extends&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@mt-kit/ts-config/base.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;include&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;exclude&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;node_modules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dist&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="初始化项目" tabindex="-1">初始化项目 <a class="header-anchor" href="#初始化项目" aria-label="Permalink to &quot;初始化项目&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 初始化 TypeScript 配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tsc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --init</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者直接创建配置文件</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{&quot;extends&quot;: &quot;@mt-kit/ts-config/base.json&quot;}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tsconfig.json</span></span></code></pre></div><h2 id="⚙️-配置选项" tabindex="-1">⚙️ 配置选项 <a class="header-anchor" href="#⚙️-配置选项" aria-label="Permalink to &quot;⚙️ 配置选项&quot;">​</a></h2><h3 id="基础配置-base-json" tabindex="-1">基础配置 (base.json) <a class="header-anchor" href="#基础配置-base-json" aria-label="Permalink to &quot;基础配置 (base.json)&quot;">​</a></h3><table tabindex="0"><thead><tr><th>属性名</th><th>值</th><th>说明</th></tr></thead><tbody><tr><td><code>target</code></td><td><code>&quot;ES2022&quot;</code></td><td>编译目标 ECMAScript 版本</td></tr><tr><td><code>module</code></td><td><code>&quot;ESNext&quot;</code></td><td>编译模块系统</td></tr><tr><td><code>moduleResolution</code></td><td><code>&quot;bundler&quot;</code></td><td>模块解析策略</td></tr><tr><td><code>strict</code></td><td><code>true</code></td><td>启用所有严格类型检查选项</td></tr><tr><td><code>declaration</code></td><td><code>true</code></td><td>生成对应的 .d.ts 声明文件</td></tr><tr><td><code>noImplicitOverride</code></td><td><code>true</code></td><td>禁止隐式覆盖父类方法</td></tr><tr><td><code>noUnusedLocals</code></td><td><code>true</code></td><td>检查未使用的局部变量</td></tr><tr><td><code>esModuleInterop</code></td><td><code>true</code></td><td>启用 ES 模块互操作性</td></tr><tr><td><code>useUnknownInCatchVariables</code></td><td><code>true</code></td><td>将 catch 变量设为 unknown 类型</td></tr><tr><td><code>composite</code></td><td><code>true</code></td><td>启用项目编译</td></tr><tr><td><code>declarationMap</code></td><td><code>true</code></td><td>生成声明文件的 sourcemap</td></tr><tr><td><code>inlineSources</code></td><td><code>true</code></td><td>将源文件嵌入 sourcemap 中</td></tr><tr><td><code>isolatedModules</code></td><td><code>true</code></td><td>将每个文件作为独立模块编译</td></tr><tr><td><code>skipLibCheck</code></td><td><code>true</code></td><td>跳过声明文件的类型检查</td></tr><tr><td><code>noUnusedParameters</code></td><td><code>true</code></td><td>检查未使用的函数参数</td></tr><tr><td><code>preserveWatchOutput</code></td><td><code>true</code></td><td>保留 watch 模式的控制台输出</td></tr><tr><td><code>resolveJsonModule</code></td><td><code>true</code></td><td>允许导入 JSON 模块</td></tr><tr><td><code>removeComments</code></td><td><code>false</code></td><td>不移除注释</td></tr><tr><td><code>baseUrl</code></td><td><code>&quot;.&quot;</code></td><td>模块解析的基准路径</td></tr><tr><td><code>noImplicitThis</code></td><td><code>true</code></td><td>禁止隐式 any 类型的 this</td></tr><tr><td><code>verbatimModuleSyntax</code></td><td><code>true</code></td><td>使用字面模块语法</td></tr><tr><td><code>useDefineForClassFields</code></td><td><code>true</code></td><td>使用 define 语义定义类字段</td></tr><tr><td><code>lib</code></td><td><code>[&quot;ES2022&quot;]</code></td><td>包含的库文件</td></tr><tr><td><code>outDir</code></td><td><code>&quot;./dist&quot;</code></td><td>输出目录</td></tr><tr><td><code>sourceMap</code></td><td><code>true</code></td><td>生成 sourcemap 文件</td></tr><tr><td><code>allowJs</code></td><td><code>true</code></td><td>允许编译 JavaScript 文件</td></tr><tr><td><code>forceConsistentCasingInFileNames</code></td><td><code>true</code></td><td>强制文件名大小写一致</td></tr><tr><td><code>allowSyntheticDefaultImports</code></td><td><code>true</code></td><td>允许合成默认导入</td></tr><tr><td><code>strictFunctionTypes</code></td><td><code>true</code></td><td>启用函数参数严格类型检查</td></tr><tr><td><code>noImplicitAny</code></td><td><code>true</code></td><td>禁止隐式 any 类型</td></tr><tr><td><code>paths</code></td><td><code>{}</code></td><td>模块路径映射配置</td></tr><tr><td><code>types</code></td><td><code>[&quot;node&quot;]</code></td><td>包含的类型声明文件</td></tr><tr><td><code>emitDeclarationOnly</code></td><td><code>false</code></td><td>不仅生成声明文件</td></tr><tr><td><code>files</code></td><td><code>[]</code></td><td>包含的特定文件列表</td></tr><tr><td><code>include</code></td><td><code>[&quot;src/**/*&quot;]</code></td><td>包含的文件模式</td></tr><tr><td><code>newLine</code></td><td><code>&quot;lf&quot;</code></td><td>指定换行符格式</td></tr><tr><td><code>noErrorTruncation</code></td><td><code>true</code></td><td>禁止截断错误信息</td></tr><tr><td><code>preserveConstEnums</code></td><td><code>true</code></td><td>保留 const 枚举</td></tr><tr><td><code>stripInternal</code></td><td><code>true</code></td><td>移除带有 @internal 标记的代码</td></tr></tbody></table><h3 id="vue-配置-vue-json" tabindex="-1">Vue 配置 (vue.json) <a class="header-anchor" href="#vue-配置-vue-json" aria-label="Permalink to &quot;Vue 配置 (vue.json)&quot;">​</a></h3><table tabindex="0"><thead><tr><th>属性名</th><th>值</th><th>说明</th></tr></thead><tbody><tr><td><code>jsx</code></td><td><code>&quot;preserve&quot;</code></td><td>JSX 代码生成方式</td></tr><tr><td><code>jsxImportSource</code></td><td><code>&quot;vue&quot;</code></td><td>JSX 导入源</td></tr><tr><td><code>experimentalDecorators</code></td><td><code>true</code></td><td>启用实验性装饰器支持</td></tr></tbody></table><h3 id="react-配置-react-json" tabindex="-1">React 配置 (react.json) <a class="header-anchor" href="#react-配置-react-json" aria-label="Permalink to &quot;React 配置 (react.json)&quot;">​</a></h3><table tabindex="0"><thead><tr><th>属性名</th><th>值</th><th>说明</th></tr></thead><tbody><tr><td><code>noEmit</code></td><td><code>true</code></td><td>禁止生成输出文件</td></tr><tr><td><code>incremental</code></td><td><code>true</code></td><td>启用增量编译</td></tr><tr><td><code>plugins</code></td><td><code>[{&quot;name&quot;: &quot;@vitejs/plugin-react&quot;}]</code></td><td>使用 TypeScript 插件</td></tr></tbody></table><h3 id="node-配置-node-json" tabindex="-1">Node 配置 (node.json) <a class="header-anchor" href="#node-配置-node-json" aria-label="Permalink to &quot;Node 配置 (node.json)&quot;">​</a></h3><table tabindex="0"><thead><tr><th>属性名</th><th>值</th><th>说明</th></tr></thead><tbody><tr><td><code>lib</code></td><td><code>[&quot;ES2022&quot;]</code></td><td>仅包含 ESNext 库</td></tr><tr><td><code>noEmit</code></td><td><code>true</code></td><td>禁止生成输出文件</td></tr></tbody></table><h2 id="📋-可用配置" tabindex="-1">📋 可用配置 <a class="header-anchor" href="#📋-可用配置" aria-label="Permalink to &quot;📋 可用配置&quot;">​</a></h2><table tabindex="0"><thead><tr><th>配置名称</th><th>文件路径</th><th>适用场景</th></tr></thead><tbody><tr><td><code>base</code></td><td><code>@mt-kit/ts-config/base.json</code></td><td>基础 TypeScript 项目</td></tr><tr><td><code>app</code></td><td><code>@mt-kit/ts-config/app.json</code></td><td>HTML 应用项目</td></tr><tr><td><code>node</code></td><td><code>@mt-kit/ts-config/node.json</code></td><td>Node.js 项目</td></tr><tr><td><code>react</code></td><td><code>@mt-kit/ts-config/react.json</code></td><td>React 项目</td></tr><tr><td><code>vue</code></td><td><code>@mt-kit/ts-config/vue.json</code></td><td>Vue 项目</td></tr></tbody></table><h2 id="🔧-高级配置" tabindex="-1">🔧 高级配置 <a class="header-anchor" href="#🔧-高级配置" aria-label="Permalink to &quot;🔧 高级配置&quot;">​</a></h2><h3 id="自定义配置" tabindex="-1">自定义配置 <a class="header-anchor" href="#自定义配置" aria-label="Permalink to &quot;自定义配置&quot;">​</a></h3><p>如果需要覆盖默认配置，可以创建自定义配置：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;$schema&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://json.schemastore.org/tsconfig&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;extends&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@mt-kit/ts-config/base.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;compilerOptions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;target&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ES2020&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;module&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;CommonJS&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;outDir&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;rootDir&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./src&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;include&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/**/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;exclude&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;node_modules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dist&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;**/*.test.ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="项目特定配置" tabindex="-1">项目特定配置 <a class="header-anchor" href="#项目特定配置" aria-label="Permalink to &quot;项目特定配置&quot;">​</a></h3><p>为特定文件类型设置不同的配置：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;$schema&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://json.schemastore.org/tsconfig&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;extends&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@mt-kit/ts-config/base.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;compilerOptions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;baseUrl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;paths&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;@/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;@/components/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/components/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;@/utils/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/utils/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="🛠️-不同环境的配置" tabindex="-1">🛠️ 不同环境的配置 <a class="header-anchor" href="#🛠️-不同环境的配置" aria-label="Permalink to &quot;🛠️ 不同环境的配置&quot;">​</a></h2><h3 id="html-应用项目" tabindex="-1">HTML 应用项目 <a class="header-anchor" href="#html-应用项目" aria-label="Permalink to &quot;HTML 应用项目&quot;">​</a></h3><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;$schema&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://json.schemastore.org/tsconfig&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;extends&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@mt-kit/ts-config/app.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;include&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;exclude&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;node_modules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dist&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="node-js-项目" tabindex="-1">Node.js 项目 <a class="header-anchor" href="#node-js-项目" aria-label="Permalink to &quot;Node.js 项目&quot;">​</a></h3><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;$schema&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://json.schemastore.org/tsconfig&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;extends&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@mt-kit/ts-config/node.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;include&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;exclude&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;node_modules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dist&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="react-项目" tabindex="-1">React 项目 <a class="header-anchor" href="#react-项目" aria-label="Permalink to &quot;React 项目&quot;">​</a></h3><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;extends&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@mt-kit/ts-config/react.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;include&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;exclude&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;node_modules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dist&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="vue-项目" tabindex="-1">Vue 项目 <a class="header-anchor" href="#vue-项目" aria-label="Permalink to &quot;Vue 项目&quot;">​</a></h3><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;extends&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@mt-kit/ts-config/vue.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;include&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;exclude&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;node_modules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dist&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="📋-常用命令" tabindex="-1">📋 常用命令 <a class="header-anchor" href="#📋-常用命令" aria-label="Permalink to &quot;📋 常用命令&quot;">​</a></h2><h3 id="编译命令" tabindex="-1">编译命令 <a class="header-anchor" href="#编译命令" aria-label="Permalink to &quot;编译命令&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 编译 TypeScript 文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tsc</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 监听模式编译</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tsc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --watch</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 编译并生成声明文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tsc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --declaration</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 编译特定文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tsc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/index.ts</span></span></code></pre></div><h3 id="类型检查" tabindex="-1">类型检查 <a class="header-anchor" href="#类型检查" aria-label="Permalink to &quot;类型检查&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 仅进行类型检查，不生成文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tsc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --noEmit</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检查特定文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tsc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --noEmit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">**</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 显示详细的错误信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tsc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --noEmit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --pretty</span></span></code></pre></div><h3 id="配置检查" tabindex="-1">配置检查 <a class="header-anchor" href="#配置检查" aria-label="Permalink to &quot;配置检查&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 显示当前配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tsc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --showConfig</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 验证配置文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tsc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --noEmit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --project</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tsconfig.json</span></span></code></pre></div><h2 id="❓-常见问题" tabindex="-1">❓ 常见问题 <a class="header-anchor" href="#❓-常见问题" aria-label="Permalink to &quot;❓ 常见问题&quot;">​</a></h2><h3 id="配置问题" tabindex="-1">配置问题 <a class="header-anchor" href="#配置问题" aria-label="Permalink to &quot;配置问题&quot;">​</a></h3><h4 id="_1-配置文件不生效" tabindex="-1">1. 配置文件不生效 <a class="header-anchor" href="#_1-配置文件不生效" aria-label="Permalink to &quot;1. 配置文件不生效&quot;">​</a></h4><p><strong>问题</strong>: TypeScript 配置没有生效</p><p><strong>解决方案</strong>:</p><ul><li>确保配置文件名称正确（<code>tsconfig.json</code>）</li><li>检查文件路径是否正确</li><li>重启 VS Code 或编辑器</li></ul><h4 id="_2-模块解析问题" tabindex="-1">2. 模块解析问题 <a class="header-anchor" href="#_2-模块解析问题" aria-label="Permalink to &quot;2. 模块解析问题&quot;">​</a></h4><p><strong>问题</strong>: 无法解析模块或路径</p><p><strong>解决方案</strong>:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;compilerOptions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;baseUrl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;paths&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;@/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;@/components/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/components/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="性能问题" tabindex="-1">性能问题 <a class="header-anchor" href="#性能问题" aria-label="Permalink to &quot;性能问题&quot;">​</a></h3><h4 id="_1-编译速度慢" tabindex="-1">1. 编译速度慢 <a class="header-anchor" href="#_1-编译速度慢" aria-label="Permalink to &quot;1. 编译速度慢&quot;">​</a></h4><p><strong>原因</strong>: 项目文件过多或配置复杂</p><p><strong>解决方案</strong>:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;compilerOptions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;incremental&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;composite&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="_2-内存不足" tabindex="-1">2. 内存不足 <a class="header-anchor" href="#_2-内存不足" aria-label="Permalink to &quot;2. 内存不足&quot;">​</a></h4><p><strong>原因</strong>: 大型项目导致内存溢出</p><p><strong>解决方案</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 增加 Node.js 内存限制</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --max-old-space-size=4096</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./node_modules/.bin/tsc</span></span></code></pre></div><h2 id="🔧-故障排除" tabindex="-1">🔧 故障排除 <a class="header-anchor" href="#🔧-故障排除" aria-label="Permalink to &quot;🔧 故障排除&quot;">​</a></h2><h3 id="调试配置" tabindex="-1">调试配置 <a class="header-anchor" href="#调试配置" aria-label="Permalink to &quot;调试配置&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 显示当前配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tsc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --showConfig</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 显示详细的编译信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tsc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --verbose</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 显示所有可能的错误</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tsc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --noEmit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --strict</span></span></code></pre></div><h3 id="清理缓存" tabindex="-1">清理缓存 <a class="header-anchor" href="#清理缓存" aria-label="Permalink to &quot;清理缓存&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 清理 TypeScript 缓存</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .tsbuildinfo</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重新编译</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tsc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --clean</span></span></code></pre></div><h2 id="📞-支持" tabindex="-1">📞 支持 <a class="header-anchor" href="#📞-支持" aria-label="Permalink to &quot;📞 支持&quot;">​</a></h2><ul><li><strong>问题反馈</strong>: <a href="https://github.com/Not-have/micro-tools/issues" target="_blank" rel="noreferrer">GitHub Issues</a></li></ul><h2 id="📄-许可证" tabindex="-1">📄 许可证 <a class="header-anchor" href="#📄-许可证" aria-label="Permalink to &quot;📄 许可证&quot;">​</a></h2><p><a href="https://github.com/Not-have/micro-tools/blob/main/LICENSE" target="_blank" rel="noreferrer">MIT License</a></p><h2 id="📋-版本要求" tabindex="-1">📋 版本要求 <a class="header-anchor" href="#📋-版本要求" aria-label="Permalink to &quot;📋 版本要求&quot;">​</a></h2><ul><li><strong>TypeScript</strong>: &gt;= 5.0.0</li><li><strong>Node.js</strong>: &gt;= 16.0.0</li><li><strong>@types/node</strong>: &gt;= 18.0.0</li></ul>`,78)])])}const E=i(e,[["render",h]]);export{c as __pageData,E as default};
