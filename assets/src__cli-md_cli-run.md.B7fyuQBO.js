import{_ as a,c as i,o as n,ae as t}from"./chunks/framework.CSmNDPeZ.js";const c=JSON.parse('{"title":"@mt-kit/cli-run","description":"","frontmatter":{},"headers":[],"relativePath":"src/_cli-md/cli-run.md","filePath":"src/_cli-md/cli-run.md"}'),l={name:"src/_cli-md/cli-run.md"};function e(p,s,h,k,r,o){return n(),i("div",null,[...s[0]||(s[0]=[t(`<h1 id="mt-kit-cli-run" tabindex="-1">@mt-kit/cli-run <a class="header-anchor" href="#mt-kit-cli-run" aria-label="Permalink to &quot;@mt-kit/cli-run&quot;">​</a></h1><p>一个用于在 monorepo 中智能运行脚本的 CLI 工具。</p><h2 id="功能特性" tabindex="-1">功能特性 <a class="header-anchor" href="#功能特性" aria-label="Permalink to &quot;功能特性&quot;">​</a></h2><ul><li>🚀 <strong>智能包发现</strong>：自动发现 monorepo 中包含指定脚本的包，默认值为 <code>start,dev,storybook</code></li><li>🎯 <strong>精确范围控制</strong>：支持指定目录范围，只在特定目录下查找包</li><li>📋 <strong>交互式选择</strong>：当有多个包时，提供友好的选择界面</li><li>🔧 <strong>多命令支持</strong>：支持单个命令或命令数组</li><li>📦 <strong>包信息显示</strong>：显示包名、描述和版本信息</li></ul><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用 npm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @mt-kit/cli-run</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用 yarn</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @mt-kit/cli-run</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用 pnpm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @mt-kit/cli-run</span></span></code></pre></div><h2 id="使用方法" tabindex="-1">使用方法 <a class="header-anchor" href="#使用方法" aria-label="Permalink to &quot;使用方法&quot;">​</a></h2><h3 id="基本用法" tabindex="-1">基本用法 <a class="header-anchor" href="#基本用法" aria-label="Permalink to &quot;基本用法&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 运行单个命令</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mt-run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 运行多个命令（逗号分隔）（推荐）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mt-run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start,storybook</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 运行多个命令（JSON 数组格式）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mt-run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;[&quot;start&quot;, &quot;storybook&quot;]&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mt-run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><h3 id="指定目录范围" tabindex="-1">指定目录范围 <a class="header-anchor" href="#指定目录范围" aria-label="Permalink to &quot;指定目录范围&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 只在 packages-vue 目录下查找包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mt-run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./packages-vue</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 只在 packages-react 目录下查找包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mt-run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> storybook</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./packages-react</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用绝对路径</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mt-run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/your/monorepo/packages-vue</span></span></code></pre></div><h3 id="在-package-json-中使用" tabindex="-1">在 package.json 中使用 <a class="header-anchor" href="#在-package-json-中使用" aria-label="Permalink to &quot;在 package.json 中使用&quot;">​</a></h3><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mt-run start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;start:vue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mt-run start --root ./packages-vue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;start:react&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mt-run start --root ./packages-react&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;dev&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mt-run start,storybook&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;dev:vue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mt-run start,storybook --root ./packages-vue&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="交互式选择" tabindex="-1">交互式选择 <a class="header-anchor" href="#交互式选择" aria-label="Permalink to &quot;交互式选择&quot;">​</a></h2><p>当有多个包包含相同的脚本时，工具会显示交互式选择界面：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>? 请选择需要执行的包 start, storybook: ›</span></span>
<span class="line"><span>❯ @mt-kit/vue-components (Vue 组件库) [start] v1.0.0</span></span>
<span class="line"><span>  @mt-kit/react-components (React 组件库) [start] v1.0.0</span></span>
<span class="line"><span>  @mt-kit/utils (工具函数库) [start] v1.0.0</span></span></code></pre></div><p>选择界面会显示：</p><ul><li>包名和描述</li><li>匹配的脚本类型</li><li>版本号</li></ul><h2 id="配置说明" tabindex="-1">配置说明 <a class="header-anchor" href="#配置说明" aria-label="Permalink to &quot;配置说明&quot;">​</a></h2><h3 id="支持的包管理器" tabindex="-1">支持的包管理器 <a class="header-anchor" href="#支持的包管理器" aria-label="Permalink to &quot;支持的包管理器&quot;">​</a></h3><ul><li>✅ pnpm（推荐）</li><li>✅ npm</li><li>✅ yarn</li></ul><h3 id="包过滤规则" tabindex="-1">包过滤规则 <a class="header-anchor" href="#包过滤规则" aria-label="Permalink to &quot;包过滤规则&quot;">​</a></h3><ul><li>自动跳过 <code>private: true</code> 的包</li><li>自动排除 <code>node_modules</code> 目录</li><li>只查找包含指定脚本的包</li></ul><h2 id="故障排除" tabindex="-1">故障排除 <a class="header-anchor" href="#故障排除" aria-label="Permalink to &quot;故障排除&quot;">​</a></h2><h3 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h3><ol><li><p><strong>找不到包</strong></p><ul><li>检查 <code>--root</code> 路径是否正确</li><li>确认包中包含指定的脚本</li></ul></li><li><p><strong>权限问题</strong></p><ul><li>确保有执行脚本的权限</li><li>检查包的 <code>package.json</code> 配置</li></ul></li><li><p><strong>脚本不存在</strong></p><ul><li>确认包中确实包含指定的脚本</li><li>检查脚本名称是否正确</li></ul></li></ol>`,26)])])}const u=a(l,[["render",e]]);export{c as __pageData,u as default};
